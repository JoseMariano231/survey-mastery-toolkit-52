
@model SuggestionListViewModel
@{
    ViewData["Title"] = "View Suggestions";
}

<div class="bg-background p-8">
    <div class="max-w-7xl mx-auto">
        <div class="card">
            <div class="card-header">
                <h2 class="card-title flex items-center gap-2">
                    <i class="icon-list"></i> Customer Suggestions
                </h2>
                <p class="card-description">
                    Browse and filter through all customer feedback and suggestions
                </p>
                
                <div class="flex flex-col md:flex-row gap-4 mt-4">
                    <div class="relative flex-grow">
                        <form asp-action="View" method="get" class="flex gap-2">
                            <div class="relative flex-grow">
                                <i class="icon-search absolute left-3 top-3 h-4 w-4 text-muted-foreground"></i>
                                <input type="text" name="search" value="@Model.SearchTerm" class="form-input pl-10" 
                                       placeholder="Search suggestions..." />
                            </div>
                            
                            <select name="status" class="form-select w-[180px]">
                                <option value="">All Statuses</option>
                                <option value="new" selected="@(Model.StatusFilter == "new")">New</option>
                                <option value="reviewed" selected="@(Model.StatusFilter == "reviewed")">Reviewed</option>
                                <option value="implemented" selected="@(Model.StatusFilter == "implemented")">Implemented</option>
                                <option value="rejected" selected="@(Model.StatusFilter == "rejected")">Rejected</option>
                            </select>
                            
                            <select name="category" class="form-select w-[180px]">
                                <option value="">All Categories</option>
                                @foreach (var category in Model.Categories)
                                {
                                    <option value="@category" selected="@(Model.CategoryFilter == category)">@category</option>
                                }
                            </select>
                            
                            <button type="submit" class="btn btn-outline">Filter</button>
                        </form>
                    </div>
                </div>
            </div>
            
            <div class="card-content">
                @if (!Model.Suggestions.Any())
                {
                    <div class="text-center py-8 text-muted-foreground">
                        No suggestions found matching your filters
                    </div>
                }
                else
                {
                    <div class="overflow-x-auto">
                        <table class="w-full">
                            <thead>
                                <tr>
                                    <th class="text-left">Suggestion</th>
                                    <th class="text-left">Customer</th>
                                    <th class="text-left">Date</th>
                                    <th class="text-left">Category</th>
                                    <th class="text-left">Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var suggestion in Model.Suggestions)
                                {
                                    <tr>
                                        <td class="max-w-md">
                                            @suggestion.Content
                                        </td>
                                        <td>
                                            @(suggestion.IsAnonymous ? "Anonymous" : suggestion.CustomerName)
                                        </td>
                                        <td class="whitespace-nowrap">
                                            <div class="flex items-center">
                                                <i class="icon-calendar mr-2 h-4 w-4 text-muted-foreground"></i>
                                                @suggestion.CreatedAt.ToString("MMM d, yyyy")
                                            </div>
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(suggestion.Category))
                                            {
                                                <span class="badge">@suggestion.Category</span>
                                            }
                                        </td>
                                        <td>
                                            @{
                                                string statusClass = suggestion.Status switch
                                                {
                                                    "new" => "bg-blue-500",
                                                    "reviewed" => "bg-yellow-500",
                                                    "implemented" => "bg-green-500",
                                                    "rejected" => "bg-red-500",
                                                    _ => "bg-gray-500"
                                                };
                                            }
                                            <span class="badge @statusClass text-white">
                                                @suggestion.Status.Substring(0, 1).ToUpper()@suggestion.Status.Substring(1)
                                            </span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
